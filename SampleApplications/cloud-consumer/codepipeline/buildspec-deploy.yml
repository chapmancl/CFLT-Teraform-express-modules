version: 0.2
phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - mkdir -p build
      - cp *.py build
      - cd build; zip -9qr ../build.zip *
      - cd ../
      - aws s3 cp ./build.zip s3://$ARTIFACT_BUCKET/TradeTracker-$CODEBUILD_BUILD_NUMBER.zip
      - rm -r build/
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)      
  build:
    commands:
      - echo Docker image build started on `date`
      - docker build -t $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER .
      - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER            
      - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG_LATEST            
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - aws lambda update-function-code --function-name tradetracker --publish --s3-bucket $ARTIFACT_BUCKET --s3-key TradeTracker-$CODEBUILD_BUILD_NUMBER.zip
      #- aws ecs update-service --service srv_tradetracker --cluster <<CLUSTER NAME>> --force-new-deployment  